{"ast":null,"code":"import _classCallCheck from\"/home/ankit/Projects/ReactJS/react_website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ankit/Projects/ReactJS/react_website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/ankit/Projects/ReactJS/react_website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/ankit/Projects/ReactJS/react_website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import firebase from\"firebase\";import StyledFirebaseAuth from\"react-firebaseui/StyledFirebaseAuth\";firebase.initializeApp({apiKey:'AIzaSyAU0mYKxIMw42dJV5Gyi1k7S5AheWtp0IQ',authDomain:'portalgrapushnotification.firebaseapp.com'});var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.uiConfig={signInFlow:\"popup\",signInOptions:[firebase.auth.GoogleAuthProvider.PROVIDER_ID,firebase.auth.TwitterAuthProvider.PROVIDER_ID],callbacks:{signInSuccess:function signInSuccess(){debugger;return false;}}};_this.state={isSignedIn:false};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var classThis=this;firebase.auth().onAuthStateChanged(function(u){classThis.setState({isSignedIn:!!u});});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},this.state.isSignedIn?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h1\",null,\"IN\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return firebase.auth().signOut();}},\"LOGOUT\")):/*#__PURE__*/React.createElement(StyledFirebaseAuth,{uiConfig:this.uiConfig,firebaseAuth:firebase.auth()}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/ankit/Projects/ReactJS/react_website/src/Firebase.js"],"names":["React","firebase","StyledFirebaseAuth","initializeApp","apiKey","authDomain","App","props","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","TwitterAuthProvider","callbacks","signInSuccess","state","isSignedIn","classThis","onAuthStateChanged","u","setState","signOut","Component"],"mappings":"onBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,qCAA/B,CAEAD,QAAQ,CAACE,aAAT,CAAuB,CACrBC,MAAM,CAAE,yCADa,CAErBC,UAAU,CAAE,2CAFS,CAAvB,E,GAKMC,CAAAA,G,sGACJ,aAAYC,KAAZ,CAAkB,qCAChB,uBAAMA,KAAN,EADgB,MAKlBC,QALkB,CAKP,CACTC,UAAU,CAAE,OADH,CAETC,aAAa,CAAC,CACZT,QAAQ,CAACU,IAAT,CAAcC,kBAAd,CAAiCC,WADrB,CAEZZ,QAAQ,CAACU,IAAT,CAAcG,mBAAd,CAAkCD,WAFtB,CAFL,CAMTE,SAAS,CAAE,CACTC,aAAa,CAAG,wBAAU,CACxB,SACA,MAAO,MAAP,CACD,CAJQ,CANF,CALO,CAEhB,MAAKC,KAAL,CAAa,CAAEC,UAAU,CAAG,KAAf,CAAb,CAFgB,aAGjB,C,6EAgBoB,CACnB,GAAMC,CAAAA,SAAS,CAAG,IAAlB,CACAlB,QAAQ,CAACU,IAAT,GAAgBS,kBAAhB,CAAmC,SAASC,CAAT,CAAW,CAE5CF,SAAS,CAACG,QAAV,CAAmB,CAAEJ,UAAU,CAAG,CAAC,CAACG,CAAjB,CAAnB,EACD,CAHD,EAID,C,uCAIO,CACN,mBACJ,2BAAK,SAAS,CAAC,KAAf,EAEE,KAAKJ,KAAL,CAAWC,UAAX,cAAyB,qDACvB,mCADuB,cAEvB,8BAAQ,OAAO,CAAE,yBAAMjB,CAAAA,QAAQ,CAACU,IAAT,GAAgBY,OAAhB,EAAN,EAAjB,WAFuB,CAAzB,cAIE,oBAAC,kBAAD,EACE,QAAQ,CAAE,KAAKf,QADjB,CAEE,YAAY,CAAEP,QAAQ,CAACU,IAAT,EAFhB,EANJ,CADI,CAeD,C,iBA9CeX,KAAK,CAACwB,S,EAiDxB,cAAelB,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport firebase from \"firebase\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyAU0mYKxIMw42dJV5Gyi1k7S5AheWtp0IQ',\n  authDomain: 'portalgrapushnotification.firebaseapp.com'\n});\n\nclass App extends React.Component {  \n  constructor(props){\n    super(props);\n    this.state = { isSignedIn : false }\n  }\n  \n  uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions:[\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.TwitterAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      signInSuccess : function(){\n        debugger;\n        return false;\n      }\n    }\n  }\n\n  componentDidMount () {\n    const classThis = this;\n    firebase.auth().onAuthStateChanged(function(u){\n      \n      classThis.setState({ isSignedIn : !!u });\n    });\n  }\n\n\n\n  render(){\n    return (\n<div className=\"App\">\n  {\n  this.state.isSignedIn ? (<>\n    <h1>IN</h1>\n    <button onClick={() => firebase.auth().signOut() }>LOGOUT</button></>\n  ) : (\n    <StyledFirebaseAuth \n      uiConfig={this.uiConfig} \n      firebaseAuth={firebase.auth()}\n    />\n  )\n  }\n</div>\n    );\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}