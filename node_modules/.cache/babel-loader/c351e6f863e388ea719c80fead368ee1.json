{"ast":null,"code":"import _classCallCheck from\"/home/ankit/Projects/ReactJS/react_website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ankit/Projects/ReactJS/react_website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/ankit/Projects/ReactJS/react_website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/ankit/Projects/ReactJS/react_website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import TwitterLogin from'react-twitter-auth';var TwitterBtn=/*#__PURE__*/function(_Component){_inherits(TwitterBtn,_Component);var _super=_createSuper(TwitterBtn);function TwitterBtn(){var _this;_classCallCheck(this,TwitterBtn);_this=_super.call(this);_this.onSuccess=function(response){var token=response.headers.get('x-auth-token');response.json().then(function(user){if(token){_this.setState({isAuthenticated:true,user:user,token:token});}});};_this.onFailed=function(error){alert(error);};_this.logout=function(){_this.setState({isAuthenticated:false,token:'',user:null});};_this.state={isAuthenticated:false,user:null,token:''};return _this;}_createClass(TwitterBtn,[{key:\"render\",value:function render(){var content=!!this.state.isAuthenticated?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"Authenticated\"),/*#__PURE__*/React.createElement(\"div\",null,this.state.user.email),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:this.logout,className:\"button\"},\"Log out\"))):/*#__PURE__*/React.createElement(TwitterLogin,{loginUrl:\"http://localhost:3000\",onFailure:this.onFailed,onSuccess:this.onSuccess,requestTokenUrl:\"http://localhost:3000\"});return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},content);}}]);return TwitterBtn;}(Component);export default TwitterBtn;","map":{"version":3,"sources":["/home/ankit/Projects/ReactJS/react_website/src/Twitterlogin.js"],"names":["React","Component","TwitterLogin","TwitterBtn","onSuccess","response","token","headers","get","json","then","user","setState","isAuthenticated","onFailed","error","alert","logout","state","content","email"],"mappings":"onBACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,C,GAEMC,CAAAA,U,wGACF,qBAAc,4CACV,wBADU,MAMdC,SANc,CAMF,SAACC,QAAD,CAAc,CACtB,GAAMC,CAAAA,KAAK,CAAGD,QAAQ,CAACE,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,CAAd,CACAH,QAAQ,CAACI,IAAT,GAAgBC,IAAhB,CAAqB,SAAAC,IAAI,CAAI,CAC3B,GAAIL,KAAJ,CAAW,CACT,MAAKM,QAAL,CAAc,CAACC,eAAe,CAAE,IAAlB,CAAwBF,IAAI,CAAEA,IAA9B,CAAoCL,KAAK,CAAEA,KAA3C,CAAd,EACD,CACF,CAJD,EAKD,CAbW,OAeZQ,QAfY,CAeD,SAACC,KAAD,CAAW,CACpBC,KAAK,CAACD,KAAD,CAAL,CACD,CAjBW,OAmBZE,MAnBY,CAmBH,UAAM,CACb,MAAKL,QAAL,CAAc,CAACC,eAAe,CAAE,KAAlB,CAAyBP,KAAK,CAAE,EAAhC,CAAoCK,IAAI,CAAE,IAA1C,CAAd,EACD,CArBW,CAGV,MAAKO,KAAL,CAAa,CAAEL,eAAe,CAAE,KAAnB,CAA0BF,IAAI,CAAE,IAAhC,CAAsCL,KAAK,CAAE,EAA7C,CAAb,CAHU,aAIb,C,8DAmBU,CACP,GAAIa,CAAAA,OAAO,CAAG,CAAC,CAAC,KAAKD,KAAL,CAAWL,eAAb,cAEV,4CACE,6CADF,cAEE,+BACG,KAAKK,KAAL,CAAWP,IAAX,CAAgBS,KADnB,CAFF,cAKE,4CACE,8BAAQ,OAAO,CAAE,KAAKH,MAAtB,CAA8B,SAAS,CAAC,QAAxC,YADF,CALF,CAFU,cAeV,oBAAC,YAAD,EAAc,QAAQ,CAAC,uBAAvB,CACc,SAAS,CAAE,KAAKH,QAD9B,CACwC,SAAS,CAAE,KAAKV,SADxD,CAEc,eAAe,CAAC,uBAF9B,EAfJ,CAoBA,mBACE,2BAAK,SAAS,CAAC,KAAf,EACGe,OADH,CADF,CAKH,C,wBAlDoBlB,S,EAsDzB,cAAeE,CAAAA,UAAf","sourcesContent":["\nimport React, { Component } from 'react'\nimport TwitterLogin from 'react-twitter-auth';\n\nclass TwitterBtn extends Component {\n    constructor() {\n        super();\n\n        this.state = { isAuthenticated: false, user: null, token: ''};\n    }\n\n    onSuccess = (response) => {\n        const token = response.headers.get('x-auth-token');\n        response.json().then(user => {\n          if (token) {\n            this.setState({isAuthenticated: true, user: user, token: token});\n          }\n        });\n      };\n      \n      onFailed = (error) => {\n        alert(error);\n      };\n\n      logout = () => {\n        this.setState({isAuthenticated: false, token: '', user: null})\n      };\n      \n      render() {\n        let content = !!this.state.isAuthenticated ?\n          (\n            <div>\n              <p>Authenticated</p>\n              <div>\n                {this.state.user.email}\n              </div>\n              <div>\n                <button onClick={this.logout} className=\"button\" >\n                  Log out\n                </button>\n              </div>\n            </div>\n          ) :\n          (\n            <TwitterLogin loginUrl=\"http://localhost:3000\"\n                          onFailure={this.onFailed} onSuccess={this.onSuccess}\n                          requestTokenUrl=\"http://localhost:3000\"/>\n          );\n      \n        return (\n          <div className=\"App\">\n            {content}\n          </div>\n        );\n    }\n}\n\n\nexport default TwitterBtn;"]},"metadata":{},"sourceType":"module"}